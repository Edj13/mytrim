#!/usr/bin/perl

# $start[id] = time;
# $trail[id][entry] = lookupid;
# $time[lookupid] = time;
# $path[lookupid] = coordinates;

$start[0] = 0;
$lookupid = 0;

while(<STDIN>)
{
	@val = split( /\s+/ );

	if( /^clust / )
	{
		push( @clust, "$t $val[1] $val[2]" );
	}
	elsif( /^start / )
	{
		$t = $start[$val[6]];
		$trail[ $val[6] ] = '';
	}
	elsif( /^cont / )
	{
		$t++;
		$trail[ $val[6] ] .= $lookupid . " ";
		$path[$lookupid] = "$x $y $val[1] $val[2]";
		$time[$lookupid] = $t;
		$lookupid++;
	}
	elsif( /^spawn / )
	{
		$start[ $val[1] ] = $t;
	}

	$x = $val[1];
	$y = $val[2];
	$z = $val[3];
}

foreach( @clust )
{
	print STDERR $_,"\n";
}

# print path segments at time 500

$fade = 200;
$at = 650;

#cluster coords (will be shifted to 0,0)
$cx = 1105.714600;
$cy = 6543.124023;

#display size (-$d to $d in x and y)
$d = 150;


	for( $i = 0; $i < $lookupid; $i++)
	{	
		$t = 1.0 - ( $at - $time[$i] ) / $fade;
		if( $t > 0.0 && $t < 1.0 )
		{
			@val = split( /\s+/, $path[$i] );
print STDERR $path[$i]," ", $time[$i]," ",$t,"\n";

			$x1 = $val[0] - $cx;
			$y1 = $val[1] - $cy;
			$x2 = $val[2] - $cx;
			$y2 = $val[3] - $cy;

			if( ( $x1 > -$d && $x1 < $d && $y1 > -$d && $y1 < $d ) ||
			    ( $x2 > -$d && $x2 < $d && $y2 > -$d && $y2 < $d ) )
			{
				print "<path d=\"M$x1,$y1 L$x2,$y2\" style=\"stroke:#ff0000; stroke-width:$t\" />\n"
			}

			#, " ", $t, "\n";
		}
	}

}
<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN"
 "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     width="750" height="750" viewBox="-50 -50 100 100">
<defs>
    <style type="text/css">
    <![CDATA[
      path {fill: none; stroke-width:0.5; stroke-linecap: round }
    ]]>
    </style>
  </defs>

<rect x="-50" y="-50" width="100" height="100" fill="#ffffff" />

<circle cx="0" cy="0" r="10" fill="blue" opacity=".2"  />
</svg>
